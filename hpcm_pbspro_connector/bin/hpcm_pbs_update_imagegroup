#!/bin/sh
#
# Copyright (C) 1994-2020 Altair Engineering, Inc.
# For more information, contact Altair at www.altair.com.
#
# This file is part of the PBS Professional ("PBS Pro") software.
#
# Open Source License Information:
#
# PBS Pro is free software. You can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# PBS Pro is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.
# See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Commercial License Information:
#
# For a copy of the commercial license terms and conditions,
# go to: (http://www.pbspro.com/UserArea/agreement.html)
# or contact the Altair Legal Department.
#
# Altair’s dual-license business model allows companies, individuals, and
# organizations to create proprietary derivative works of PBS Pro and
# distribute them - whether embedded or bundled with other software -
# under a commercial license agreement.
#
# Use of Altair’s trademarks, including but not limited to "PBS™",
# "PBS Professional®", and "PBS Pro™" and Altair’s logos is subject to Altair's
# trademark licensing policies.
#

# Script to automatically update PBS Professional with HPCM configured
# groupings: image_groups.
#
# HPCM Image Groups: A image group in HPCM represents a disk
#       image that has been captured (backed up). Based on this definition the
#       image group will be associated to the PBS Professional application
#       operating environment (aoe) native resource.

# TO-DO / Considerations:
# - Consider using some type of caching to avoid pushing unnecessary changes
# - Consider ability to [automatically] remove a group from a node that is no
#   longer being used. At the moment, the script will only 'add' configs.

# Source in the /etc/pbs.conf file
[ -f /etc/pbs.conf ] && . /etc/pbs.conf

CMU_PATH=/opt/clmgr
CMU_SHOW_NETWORK_ENTITIES="${CMU_PATH}/bin/cm group network show"
CMU_SHOW_LOGICAL_GROUPS="${CMU_PATH}/bin/cm image show"
CMU_SHOW_NODES="${CMU_PATH}/bin/cm node show"

echo "Updating PBS Professional Application Operating Environment (aoe) with HPCM Image Groups"

# Verify that pcm_provion hook is installed.
echo "Verifying that the pcm_provision hook is installed..."
if [[ ! -n `ssh ${PBS_SERVER} "${PBS_EXEC}/bin/qmgr -c 'print hook pcm_provision'"` ]] ; then
    echo "pcm_provision hook will be installed..."
    ssh ${PBS_SERVER} "${PBS_EXEC}/bin/qmgr -c \"create hook pcm_provision event = provision\""

    ssh ${PBS_SERVER} "${PBS_EXEC}/bin/qmgr -c \"import hook pcm_provision application/x-python default /opt/clmgr/contrib/hpcm_pbspro_connector/bin/hpcm_pbs_os_provision_hook.py\""
    ssh ${PBS_SERVER} "${PBS_EXEC}/bin/qmgr -c \"import hook pcm_provision application/x-config default /opt/clmgr/contrib/hpcm_pbspro_connector/etc/hpcm_pbs_os_provision_hook.json\""
fi
echo "....... DONE"
echo " "

# Removing existing aoe from all PBS Professional registered nodes
echo "Removing existing aoe from all nodes..."
for node in `ssh ${PBS_SERVER} "${PBS_EXEC}/bin/pbsnodes -a | grep -e \"^[[:alnum:]]\""` ; do
    ssh ${PBS_SERVER} "${PBS_EXEC}/bin/qmgr -c \"unset node ${node} resources_available.aoe\""
    ssh ${PBS_SERVER} "${PBS_EXEC}/bin/qmgr -c \"unset node ${node} current_aoe\""
done
echo "....... DONE"
echo " "

# Configuring PBS Professional with HPCM configured image_groups
echo "Configuring image_groups..."
for image_group in `${CMU_SHOW_LOGICAL_GROUPS}`; do
     for node in `${CMU_SHOW_NODES}`; do
        if [[ -n `ssh ${PBS_SERVER} "${PBS_EXEC}/bin/pbsnodes ${node}"` ]] ; then
            ssh ${PBS_SERVER} "${PBS_EXEC}/bin/qmgr -c \"set node ${node} resources_available.aoe += ${image_group}\""
        fi
     done
done

# After all types of aoes are defined, setting the current_aoe.
for node in `ssh ${PBS_SERVER} "${PBS_EXEC}/bin/pbsnodes -a | grep -e \"^[[:alnum:]]\""` ; do
    current_aoe=`${CMU_SHOW_NODES} -n ${node} -I --display-no-header | awk '{print $2}'`
    ssh ${PBS_SERVER} "${PBS_EXEC}/bin/qmgr -c \"set node ${node} current_aoe = ${current_aoe}\""
done

echo "....... DONE"
echo " "
