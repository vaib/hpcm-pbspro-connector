#!/bin/bash
#
# Copyright (C) 1994-2020 Altair Engineering, Inc.
# For more information, contact Altair at www.altair.com.
#
# This file is part of the PBS Professional ("PBS Pro") software.
#
# Open Source License Information:
#
# PBS Pro is free software. You can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# PBS Pro is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.
# See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Commercial License Information:
#
# For a copy of the commercial license terms and conditions,
# go to: (http://www.pbspro.com/UserArea/agreement.html)
# or contact the Altair Legal Department.
#
# Altair’s dual-license business model allows companies, individuals, and
# organizations to create proprietary derivative works of PBS Pro and
# distribute them - whether embedded or bundled with other software -
# under a commercial license agreement.
#
# Use of Altair’s trademarks, including but not limited to "PBS™",
# "PBS Professional®", and "PBS Pro™" and Altair’s logos is subject to Altair's
# trademark licensing policies.
#

# Assumption:
# This wrapper script assumes
#  1) PBS Server/Scheduler is running on the HPCM Management Node.
#  2) Script is executed on the HPCM Management Node.

# Purpose:
# This script is used to create a node_state file that organizes
# the registered PBS nodes into their respective states (free, busy,
# job-busy, down, offline, etc). The node_state file will be used
# as input for the ActionAndAlertsFile.txt
# /opt/cmu/bin/cmu_submit_extended_metrics -f/tmp/node_state

# Source in PBS specific environment variables from pbs.conf
if [ -f /etc/pbs.conf ]; then
    . /etc/pbs.conf
else
    echo "Unable to find /etc/pbs.conf"
    exit 1
fi

# Define CMU_PBSPRO_CONNECTOR, CMU_PATH
CMU_PBSPRO_CONNECTOR=/opt/clmgr/contrib/hpcm_pbspro_connector
CMU_PATH=/opt/clmgr/bin
CMU_SUBMIT_EXTENDED_METRIC=${CMU_PATH}/cmu_submit_extended_metrics

declare -A node_state
mkdir -p ${CMU_PBSPRO_CONNECTOR}/tmp/
state_file=${CMU_PBSPRO_CONNECTOR}/tmp/extended_metric_node_state

rm ${state_file}

state=`${PBS_EXEC}/bin/pbsnodes -a | grep -e "^[[:alnum:]]" -e "state " | sed '1~2 {N;s/\n/ /g}' | awk '{print $1";"$4}'`

# Iterate through the registered PBS Professional nodes. associate
# nodes to the known node_state
for s in `echo "$state"` ; do
   y=`echo $s | awk 'BEGIN { FS = ";" } ; { print $1 }'`
   z=`echo $s | awk 'BEGIN { FS = ";" } ; { print $2 }'`
   node_state+=( ["$y"]=" $z" )
done

# Construct the state_file, which will be read in by the
# cmu_submit_extended_metric command
for a in "${!node_state[@]}" ; do
    echo "BEGIN_NODE $a
node_state ${node_state[$a]}" >> ${state_file}
done

# Execute the cmu_submit_extended_metric
${CMU_SUBMIT_EXTENDED_METRIC} -f ${state_file}
