#!/bin/sh
#
# Copyright (C) 1994-2020 Altair Engineering, Inc.
# For more information, contact Altair at www.altair.com.
#
# This file is part of the PBS Professional ("PBS Pro") software.
#
# Open Source License Information:
#
# PBS Pro is free software. You can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# PBS Pro is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.
# See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Commercial License Information:
#
# For a copy of the commercial license terms and conditions,
# go to: (http://www.pbspro.com/UserArea/agreement.html)
# or contact the Altair Legal Department.
#
# Altair’s dual-license business model allows companies, individuals, and
# organizations to create proprietary derivative works of PBS Pro and
# distribute them - whether embedded or bundled with other software -
# under a commercial license agreement.
#
# Use of Altair’s trademarks, including but not limited to "PBS™",
# "PBS Professional®", and "PBS Pro™" and Altair’s logos is subject to Altair's
# trademark licensing policies.
#

# Script to automatically update PBS Professional with HPCM configured
# groupings: network_groups.
#
# HPCM Network Groups: A network group in HPCM corresponds to
#       a single network group that connects to a group of nodes. Based on this
#       definition the network group will be associated to a PBS Professional
#       custom string_array resource called hp_network.
#
# PBS Professional supports the creation of node groupings (aka placement sets).
# These node grouping do NOT need to be tied to network switches, but it is a
# common use case in the field.

# TO-DO / Considerations:
# - Consider using some type of caching to avoid pushing unnecessary changes
# - Consider ability to [automatically] remove a group from a node that is no
#   longer being used. At the moment, the script will only 'add' configs.

# Source in the /etc/pbs.conf file
[ -f /etc/pbs.conf ] && . /etc/pbs.conf

CMU_PATH=/opt/clmgr
CMU_SHOW_NETWORK_ENTITIES=${CMU_PATH}/bin/cmu_show_network_groups

# Verify that hpe_networkgroups exists, otherwise we will create this automatically
# for the administrator. We will check every time - just to be sure.

# Test if the hpe_networkgroups custom resource is defined, otherwise
# create the custom resource.
echo "Looking for custom resource (hpe_networkgroups)..."
resourcedef_ans=`${PBS_EXEC}/bin/qmgr -c "print resource hpe_networkgroups" 2> /dev/null`
### manage output
if [ -n "$resourcedef_ans" ] ; then
    echo "hpe_networkgroups EXISTS!"
else
    echo "Creating custom resource (hpe_networkgroups) ..."
    ${PBS_EXEC}/bin/qmgr -c "create resource hpe_networkgroups type=string"
    echo "....... DONE"
fi

# Check for hpe_networkgroups in qmgr node_group_key and make sure node_group_key_enable it true
chk_node_group_key_list=`${PBS_EXEC}/bin/qstat -Bf | grep node_group_key | grep hpe_networkgroups`
if [[ -n "$chk_node_group_key_list" ]] ; then
    echo "Custom resource hpe_networkgroups is defined in node_group_key!"
else
    echo "Defining custom resource hpe_networkgroups in node_group_key..."
    ${PBS_EXEC}/bin/qmgr -c "set server node_group_key+=hpe_networkgroups"
    echo "....... DONE"
fi

chk_node_group_enable=`${PBS_EXEC}/bin/qstat -Bf | grep node_group_enable | awk '{print $3}'`
if [[ "$chk_node_group_enable" == "True" ]] ; then
    echo "PBS node_group_enable EXISTS!"
else
    echo "Defining node_group_enable=true..."
    ${PBS_EXEC}/bin/qmgr -c "set server node_group_enable=true"
    echo "....... DONE"
fi

echo " "
echo "Updating PBS Professional with Network Topology information based on HPCM Network Groups"

# Removing existing hpe_networkgroups from all PBS Professional registered nodes
echo "Removing existing network groups on all registered PBS Professional nodes..."
for node in `${PBS_EXEC}/bin/pbsnodes -a | grep -e "^[[:alnum:]]"` ; do
    ${PBS_EXEC}/bin/qmgr -c "unset node ${node} resources_available.hpe_networkgroups"
done
echo "....... DONE"
echo " "

# Configuring PBS Professional with HPCM configured network_groups
echo "Configuring network groups on all PBS Professional registered nodes..."
for network_entity in `${CMU_SHOW_NETWORK_ENTITIES}`; do
    for node in `${CMU_SHOW_NETWORK_ENTITIES} ${network_entity}`; do
        if [[ -n `${PBS_EXEC}/bin/pbsnodes ${node} 2> /dev/null` ]] ; then
            ${PBS_EXEC}/bin/qmgr -c "set node ${node} resources_available.hpe_networkgroups += ${network_entity}"
        fi
    done
done
