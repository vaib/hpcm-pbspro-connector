#
# Copyright (C) 1994-2020 Altair Engineering, Inc.
# For more information, contact Altair at www.altair.com.
#
# This file is part of the PBS Professional ("PBS Pro") software.
#
# Open Source License Information:
#
# PBS Pro is free software. You can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# PBS Pro is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.
# See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Commercial License Information:
#
# For a copy of the commercial license terms and conditions,
# go to: (http://www.pbspro.com/UserArea/agreement.html)
# or contact the Altair Legal Department.
#
# Altair’s dual-license business model allows companies, individuals, and
# organizations to create proprietary derivative works of PBS Pro and
# distribute them - whether embedded or bundled with other software -
# under a commercial license agreement.
#
# Use of Altair’s trademarks, including but not limited to "PBS™",
# "PBS Professional®", and "PBS Pro™" and Altair’s logos is subject to Altair's
# trademark licensing policies.
#

# This is a HPCM action and alerts description file for the HPCM PBS Professional Connector
# This should be inserted into the HPCM ActionAndAlerts.txt file located in /opt/clmgr/etc/ActionAndAlertsFile.txt
#
#=============================================================
#Description of the ACTIONS Format is:
#Name "Description" Timemultiple numerical  mesurement_method	max_value unit action_to_perform
#or
#Name "Description" Timemultiple string mesurement_method  unit action_to_perform
#or
#in case you are setting up the cmu collectl client....
#
#almost all metrics are given in both COLLECTL and LEGACY syntax
#
#=============================================================
#
#
ACTIONS

## PBS Actions Configuration Start ###
#
#Name           "Description"           Time    numerical       mesurement_method       max_value       unit            action_to_perform
#logins         "number of logins"      12      numerical       Instantaneous           1               login(s)        who -u -s | wc -l
#
#Name                   "Description"           Time    string          mesurement_method       unit                    action_to_perform
#kernel_version         "kernel version"        9999999 string          Instantaneous           release                 uname -r
#current_image           "HPCM Active Image"      9999999 string          Instantaneous           image                   cat /root/CMU_CLONING_INFO | grep imagename | sed -e 's/imagename://g'
node_state              "PBS Node State"        1       string          Instantaneous           node_state              EXTENDED /opt/clmgr/contrib/hpcm_pbspro_connector/bin/hpcm_pbs_extended_metric_node_state
job_count               "PBS Job Count"         1       numerical       Instantaneous   8       job(s)                  EXTENDED /opt/clmgr/contrib/hpcm_pbspro_connector/bin/hpcm_pbs_extended_metric_job_count
pbs_daemon              "PBS Daemon Status"     1       string          Instantaneous           Status                  status=`ps -ef | grep pbs_mom | grep -v grep`; if [ -z "$status" ] ; then echo "Down"; else echo "Up"; fi
#
### PBS Actions Configuration End ###


#=============================================================
#Description of the alerts. Format is:
#Name "Message"	Level Timemultiple threshold comparison_operator unit action_to_perform
#=============================================================
#
#
ALERTS

### PBS Alert Configuration Start ###
#
#Name           "Message"       Level   Timem   thrd    oper    unit    action_to_perform
node_down       "PBS Node Down"     1       24      0       >       node(s) pbsnodes -l | grep down | grep `hostname` | wc -l
node_offline    "PBS Node Offline"  1       24      0       >       node(s) pbsnodes -l | grep offline | grep `hostname` | wc -l
# Would be nice to have an alert to say when a node came back online
#
### PBS Alert Configuration End ###

#===========================================================================================
# Description of the alert reactions. Format is:
# Alert_name [Alert_name2...] "Reaction message" ReactOnRaise|ReactAlways command(s)
#
# NOTES
#
#  ReactOnRaise|ReactAlways have the following meanings:
#
#    ReactOnRaise  - Execute 'command(s)' when alert shows as raised provided it was not raised on the last monitoring pass.
#    ReactAlways   - Execute 'command(s)' when alert shows as raised (at the alert's time multiple).
#
# 'command(s)' are any valid Linux commands.  The following keywords are supported in the 'command(s)'
#  string.  A global substitution (throughout the command line) is done for each keyword before 'command(s)' is executed.
#
#    CMU_ALERT_NAME             - The name of the alert
#    CMU_ALERT_LEVEL            - The level of the alert.
#    CMU_REACT_MESSAGE          - The text of the reaction's "Reaction message"
#    CMU_ALERT_NODES            - The list of all nodes that raised the alert during the current monitoring
#                                 pass. The list is condensed in the form provided by cmu_condense_nodes.
#    CMU_ALERT_ NODES_EXPANDED  - The same as CMU_ALERT_NODES only the list is expanded, ordered and separated by commas.
#    CMU_ALERT_VALUES           - The list of alert values.  This list is comma separated and ordered
#                                 like the names of CMU_ALERT_NODES_EXPANDED.
#    CMU_ALERT_TIMES            - The times the alert was triggered on each node.  This list is comma
#                                 separated and ordered like the names of CMU_ALERT_NODES_EXPANDED.
#    CMU_ALERT_SEQUENCE_FILE    - The path of the HPCM "sequence" file containing the alerts and
#                                 alert values from the current monitoring pass.
#
#===========================================================================================
#
#
ALERT_REACTIONS

### PBS Alert_Reactions Configuration Start ###
#
#Alert_name     "Reaction Message"              ReactOnRaise|ReactAlways        action_to_perform
#node_down      "Sending mail to root"          ReactOnRaise                    echo -e "Alert 'CMU_ALERT_NAME' raised on node(s) CMU_ALERT_NODES. \n\nDetails:\n`/opt/pbs/default/bin/pbsnodes -l | grep down`" | mailx -s "HPCM: Alert 'CMU_ALERT_NAME' raised." root
#node_offline   "Sending mail to root"          ReactOnRaise                    echo -e "Alert 'CMU_ALERT_NAME' raised on node(s) CMU_ALERT_NODES. \n\nDetails:\n`/opt/pbs/default/bin/pbsnodes -l | grep offline`" | mailx -s "HPCM: Alert 'CMU_ALERT_NAME' raised." root
#
### PBS Alert_Reactions Configuration End ###
